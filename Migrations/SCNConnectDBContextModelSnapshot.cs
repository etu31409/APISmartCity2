// <auto-generated />
using System;
using APISmartCity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APISmartCity.Migrations
{
    [DbContext(typeof(SCNConnectDBContext))]
    partial class SCNConnectDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APISmartCity.Model.Actualite", b =>
                {
                    b.Property<int>("IdActualite")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("IdCommerce");

                    b.Property<int?>("IdSiteTouristique");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Texte")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdActualite");

                    b.HasIndex("IdCommerce");

                    b.ToTable("Actualite");
                });

            modelBuilder.Entity("APISmartCity.Model.Categorie", b =>
                {
                    b.Property<int>("IdCategorie")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdCategorie");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("APISmartCity.Model.Commerce", b =>
                {
                    b.Property<int?>("IdCommerce")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdresseMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("IdCategorie");

                    b.Property<int?>("IdUser");

                    b.Property<string>("NomCommerce")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("Numero");

                    b.Property<int?>("NumeroFixe");

                    b.Property<int?>("NumeroGsm");

                    b.Property<string>("ParcoursProduitPhare")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ProduitPhare")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Rue")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UrlPageFacebook")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdCommerce");

                    b.HasIndex("IdCategorie");

                    b.HasIndex("IdUser");

                    b.ToTable("Commerce");
                });

            modelBuilder.Entity("APISmartCity.Model.ImageCommerce", b =>
                {
                    b.Property<int>("IdImageCommerce")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("idImageCommerce")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCommerce");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdImageCommerce");

                    b.HasIndex("IdCommerce");

                    b.ToTable("ImageCommerce");
                });

            modelBuilder.Entity("APISmartCity.Model.OpeningPeriod", b =>
                {
                    b.Property<int>("IdHoraire")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("HoraireDebut");

                    b.Property<TimeSpan>("HoraireFin");

                    b.Property<int?>("IdCommerce")
                        .HasColumnName("idCommerce");

                    b.Property<int>("Jour");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("IdHoraire");

                    b.HasIndex("IdCommerce");

                    b.ToTable("OpeningPeriod");
                });

            modelBuilder.Entity("APISmartCity.Model.Role", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Name");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("APISmartCity.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("APISmartCity.Model.UserRole", b =>
                {
                    b.Property<string>("IdRole");

                    b.Property<int>("IdUser");

                    b.HasKey("IdRole", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("APISmartCity.Model.Actualite", b =>
                {
                    b.HasOne("APISmartCity.Model.Commerce", "IdCommerceNavigation")
                        .WithMany("Actualite")
                        .HasForeignKey("IdCommerce")
                        .HasConstraintName("FK__Actualite__IdCom__4B7734FF");
                });

            modelBuilder.Entity("APISmartCity.Model.Commerce", b =>
                {
                    b.HasOne("APISmartCity.Model.Categorie", "IdCategorieNavigation")
                        .WithMany("Commerce")
                        .HasForeignKey("IdCategorie")
                        .HasConstraintName("FK__Commerce__IdCate__42E1EEFE");

                    b.HasOne("APISmartCity.Model.User", "IdUserNavigation")
                        .WithMany("Commerce")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Commerce__IdPers__41EDCAC5");
                });

            modelBuilder.Entity("APISmartCity.Model.ImageCommerce", b =>
                {
                    b.HasOne("APISmartCity.Model.Commerce", "IdCommerceNavigation")
                        .WithMany("ImageCommerce")
                        .HasForeignKey("IdCommerce")
                        .HasConstraintName("FK__ImageComm__IdCom__45BE5BA9");
                });

            modelBuilder.Entity("APISmartCity.Model.OpeningPeriod", b =>
                {
                    b.HasOne("APISmartCity.Model.Commerce", "IdCommerceNavigation")
                        .WithMany("OpeningPeriod")
                        .HasForeignKey("IdCommerce")
                        .HasConstraintName("FK__OpeningPe__idCom__489AC854");
                });

            modelBuilder.Entity("APISmartCity.Model.UserRole", b =>
                {
                    b.HasOne("APISmartCity.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("APISmartCity.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
